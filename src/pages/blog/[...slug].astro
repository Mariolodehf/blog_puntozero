---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { slugify } from '../../utils/slugify';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  
  return sortedPosts.map((post, index) => {
    const prevPost = sortedPosts[index + 1];
    const nextPost = sortedPosts[index - 1];
    
    // Crear slug amigable basado en el título
    const friendlySlug = slugify(post.data.title);
    
    return {
      params: { slug: friendlySlug },
      props: {
        post,
        prevPost: prevPost ? {
          title: prevPost.data.title,
          slug: slugify(prevPost.data.title)
        } : null,
        nextPost: nextPost ? {
          title: nextPost.data.title,
          slug: slugify(nextPost.data.title)
        } : null
      },
    };
  });
}

const { Content } = await Astro.props;
const { post, prevPost, nextPost } = Astro.props;
const { title, description, pubDate, tags } = post.data;
---

<Layout
  title={`${title} | Mi Blog`}
  description={description}
  type="article"
  pubDate={pubDate}
  tags={tags}
>
  <article class="post">
    <header class="post-header">
      <h1>{title}</h1>
      <div class="post-meta">
        <time datetime={pubDate.toISOString()}>
          {pubDate.toLocaleDateString('es-ES', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <div class="tags">
          {tags.map((tag) => (
            <a href={`/tags/${tag}`} class="tag">{tag}</a>
          ))}
        </div>
      </div>
    </header>
    
    <div class="post-content">
      <Content />
    </div>
    
    <nav class="post-navigation">
      {prevPost && (
        <a href={`/blog/${prevPost.slug}`} class="prev-post">
          <span class="nav-label">← Anterior</span>
          <span class="nav-title">{prevPost.title}</span>
        </a>
      )}
      {nextPost && (
        <a href={`/blog/${nextPost.slug}`} class="next-post">
          <span class="nav-label">Siguiente →</span>
          <span class="nav-title">{nextPost.title}</span>
        </a>
      )}
    </nav>
  </article>
</Layout>

<style>
  .post {
    max-width: 800px;
    margin: 0 auto;
  }

  .post-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border);
  }

  .post-header h1 {
    font-size: 2.5rem;
    line-height: 1.2;
    margin-bottom: 1rem;
    color: var(--text);
    font-weight: 700;
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    color: var(--text-light);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: rgba(var(--accent), 0.1);
    color: rgb(var(--accent));
    padding: 0.2rem 0.5rem;
    border-radius: 0.5rem;
    font-size: 0.8rem;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .tag:hover {
    background: rgba(var(--accent), 0.2);
  }

  .post-content {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--text);
  }

  .post-navigation {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
    display: flex;
    justify-content: space-between;
    gap: 2rem;
  }

  .prev-post,
  .next-post {
    flex: 1;
    padding: 1.5rem;
    background: var(--background);
    border: 1px solid var(--border);
    border-radius: 1rem;
    text-decoration: none;
    color: var(--text);
    transition: all 0.2s;
  }

  .prev-post:hover,
  .next-post:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: rgb(var(--accent));
  }

  .next-post {
    text-align: right;
  }

  .nav-label {
    display: block;
    font-size: 0.9rem;
    color: var(--text-light);
    margin-bottom: 0.5rem;
  }

  .nav-title {
    font-weight: 500;
  }

  :global(.post-content h2) {
    font-size: 1.8rem;
    margin: 2.5rem 0 1.5rem;
    color: var(--text);
  }

  :global(.post-content h3) {
    font-size: 1.5rem;
    margin: 2rem 0 1rem;
    color: var(--text);
  }

  :global(.post-content p) {
    margin: 1.5rem 0;
  }

  :global(.post-content ul),
  :global(.post-content ol) {
    margin: 1.5rem 0;
    padding-left: 1.5rem;
  }

  :global(.post-content li) {
    margin: 0.5rem 0;
  }

  :global(.post-content blockquote) {
    margin: 2rem 0;
    padding: 1.5rem;
    border-left: 4px solid rgb(var(--accent));
    background: rgba(var(--accent), 0.05);
    font-style: italic;
    border-radius: 0 0.5rem 0.5rem 0;
  }

  :global(.post-content code) {
    background: rgba(var(--accent), 0.1);
    color: rgb(var(--accent));
    padding: 0.2rem 0.4rem;
    border-radius: 0.3rem;
    font-size: 0.9em;
  }

  :global(.post-content pre) {
    margin: 2rem 0;
    padding: 1.5rem;
    background: #1e1e1e;
    color: #fff;
    border-radius: 0.5rem;
    overflow-x: auto;
  }

  :global(.post-content pre code) {
    background: none;
    padding: 0;
    color: inherit;
  }

  :global(.post-content img) {
    max-width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin: 2rem 0;
  }

  :global(.post-content a) {
    color: rgb(var(--accent));
    text-decoration: none;
    transition: color 0.2s;
  }

  :global(.post-content a:hover) {
    color: rgb(var(--accent-dark));
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .post-header h1 {
      font-size: 2rem;
    }

    .post-navigation {
      flex-direction: column;
      gap: 1rem;
    }

    .next-post {
      text-align: left;
    }
  }
</style> 