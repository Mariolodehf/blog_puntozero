---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { slugify } from '../../utils/slugify';
import Pagination from '../../components/Pagination.astro';
import { POSTS_PER_PAGE, SITE_TITLE } from '../../utils/constants';

export const prerender = true;

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const tags = [...new Set(posts.flatMap((post) => post.data.tags))];

	return tags.flatMap((tag) => {
		const taggedPosts = posts.filter((post) => post.data.tags.includes(tag));
		const totalPages = Math.ceil(taggedPosts.length / POSTS_PER_PAGE);

		// Generar rutas para cada página de la etiqueta
		return Array.from({ length: totalPages }, (_, i) => ({
			params: { tag, page: (i + 1).toString() },
			props: {
				posts: taggedPosts,
				totalPages,
				currentPage: i + 1,
			},
		}));
	});
}

const { tag } = Astro.params;
const { posts, totalPages, currentPage } = Astro.props;

// Calcular los posts para la página actual
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const paginatedPosts = posts.slice(startIndex, endIndex);
---

<Layout
	title={`Posts con la etiqueta "${tag}" | ${SITE_TITLE}`}
	description={`Artículos sobre ${tag} en ${SITE_TITLE}. Encuentra todo el contenido relacionado con ${tag}.`}
>
	<section class="tag-header">
		<h1>Posts con la etiqueta: {tag}</h1>
		<a href="/tags" class="back-link">← Ver todas las etiquetas</a>
	</section>

	<div class="posts-grid">
		{paginatedPosts.map((post) => (
			<article class="post-card">
				<div class="post-content">
					<h2>
						<a href={`/blog/${slugify(post.data.title)}`}>{post.data.title}</a>
					</h2>
					<p>{post.data.description}</p>
					<div class="post-meta">
						<time datetime={post.data.pubDate.toISOString()}>
							{post.data.pubDate.toLocaleDateString('es-ES', {
								year: 'numeric',
								month: 'long',
								day: 'numeric'
							})}
						</time>
						<div class="tags">
							{post.data.tags.map((t) => (
								<a href={`/tags/${t}`} class="tag">{t}</a>
							))}
						</div>
					</div>
				</div>
			</article>
		))}
	</div>

	{totalPages > 1 && (
		<Pagination
			currentPage={currentPage}
			totalPages={totalPages}
			baseUrl={`/tags/${tag}`}
		/>
	)}
</Layout>

<style>
	.tag-header {
		margin-bottom: 3rem;
		text-align: center;
	}

	.tag-header h1 {
		font-size: 2.5rem;
		margin-bottom: 1rem;
		color: var(--text);
	}

	.back-link {
		color: var(--text-light);
		text-decoration: none;
		transition: color 0.2s;
	}

	.back-link:hover {
		color: rgb(var(--accent));
	}

	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 2rem;
	}

	.post-card {
		background: var(--background);
		border: 1px solid var(--border);
		border-radius: 1rem;
		overflow: hidden;
		transition: transform 0.2s, box-shadow 0.2s;
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
	}

	.post-content {
		padding: 1.5rem;
	}

	.post-card h2 {
		margin: 0 0 1rem 0;
		font-size: 1.5rem;
		line-height: 1.3;
	}

	.post-card h2 a {
		color: var(--text);
		text-decoration: none;
		transition: color 0.2s;
	}

	.post-card h2 a:hover {
		color: rgb(var(--accent));
	}

	.post-card p {
		color: var(--text-light);
		margin-bottom: 1.5rem;
		line-height: 1.6;
	}

	.post-meta {
		display: flex;
		flex-wrap: wrap;
		gap: 1rem;
		align-items: center;
		font-size: 0.9rem;
		color: var(--text-light);
	}

	.tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
	}

	.tag {
		background: rgba(var(--accent), 0.1);
		color: rgb(var(--accent));
		padding: 0.2rem 0.5rem;
		border-radius: 0.5rem;
		font-size: 0.8rem;
		text-decoration: none;
		transition: background-color 0.2s;
	}

	.tag:hover {
		background: rgba(var(--accent), 0.2);
	}

	@media (max-width: 768px) {
		.tag-header h1 {
			font-size: 2rem;
		}

		.posts-grid {
			grid-template-columns: 1fr;
		}
	}
</style>