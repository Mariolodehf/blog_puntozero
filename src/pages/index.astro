---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import ArticleCard from '../components/ArticleCard.astro';
import SearchBar from '../components/SearchBar.astro';
import CategoryFilter from '../components/CategoryFilter.astro';
import LoadMore from '../components/LoadMore.astro';
import NoPostsFound from '../components/NoPostsFound.astro';

const POSTS_PER_PAGE = 6;
const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const initialPosts = sortedPosts.slice(0, POSTS_PER_PAGE);
const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE);
---

<Layout title="PuntoZero - Blog de Tecnología y Desarrollo">
	<!-- Hero Section -->
	<section class="text-center py-16">
		<p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
			Tu blog de desarrollo web, programación y tecnología.
		</p>
	</section>

	<!-- Search and Filters -->
	<section class="mb-20">
		<SearchBar />
		<CategoryFilter />
	</section>

	<!-- Articles Grid -->
	<section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 posts-grid">
		{initialPosts.length > 0 ? (
			initialPosts.map((post) => (
				<ArticleCard post={post} />
			))
		) : (
			<NoPostsFound message="No hay artículos publicados aún." showSearch={false} />
		)}
	</section>

	<!-- Load More Button -->
	{initialPosts.length > 0 && (
		<LoadMore
			currentPage={1}
			totalPages={totalPages}
			hasMore={totalPages > 1}
		/>
	)}
</Layout>

<script>
	// Función para actualizar la URL con los parámetros de búsqueda
	function updateURLParams(search: string, category: string) {
		const params = new URLSearchParams(window.location.search);
		if (search) params.set('search', search);
		if (category) params.set('category', category);
		window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);
	}

	// Event listeners para búsqueda y filtros
	const searchInput = document.getElementById('search-input') as HTMLInputElement;
	const categoryButtons = document.querySelectorAll('.category-btn');

	searchInput?.addEventListener('input', (e) => {
		const searchTerm = (e.target as HTMLInputElement).value;
		updateURLParams(searchTerm, '');
		// La lógica de búsqueda se maneja en el componente SearchBar
	});

	categoryButtons.forEach(button => {
		button.addEventListener('click', () => {
			const category = button.getAttribute('data-category') || '';
			updateURLParams('', category);
			// La lógica de filtrado se maneja en el componente CategoryFilter
		});
	});
</script>
