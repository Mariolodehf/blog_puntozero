---
import '../styles/global.css';
import Header from '../components/Header.astro';
import SEO from '../components/SEO.astro';
import MobileSearchOverlay from '../components/MobileSearchOverlay.astro';

interface Props {
	title: string;
	description?: string;
	image?: string;
	type?: 'website' | 'article';
	pubDate?: Date;
	tags?: string[];
	fullWidth?: boolean;
}

const { title, description, image, type, pubDate, tags, fullWidth = false } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		{description && <meta name="description" content={description} />}
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
		<SEO title={title} description={description ?? ''} image={image} />
	</head>
	<body class="min-h-screen transition-colors duration-200">
		<Header />
		{fullWidth ? (
			<slot />
		) : (
			<main class="flex-grow container mx-auto px-4 py-8">
				<slot />
			</main>
		)}
		<footer class="bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 py-8 mt-16">
			<div class="container mx-auto px-4 text-center text-gray-600 dark:text-gray-400">
				<p>&copy; {new Date().getFullYear()} PuntoZero. Todos los derechos reservados.</p>
			</div>
		</footer>
		<MobileSearchOverlay />
	</body>
</html>

<script>
	// FunciÃ³n para manejar el cambio de tema
	function initTheme() {
		// Verificar preferencia guardada
		const theme = (() => {
			if (typeof localStorage !== 'undefined') {
				const storedTheme = localStorage.getItem('theme');
				if (storedTheme) {
					return storedTheme;
				}
			}
			if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
				return 'dark';
			}
			return 'light';
		})();

		// Aplicar tema
		if (theme === 'light') {
			document.documentElement.classList.remove('dark');
		} else {
			document.documentElement.classList.add('dark');
		}

		// Guardar preferencia
		window.localStorage.setItem('theme', theme);
	}

	// Inicializar tema
	initTheme();

	// Escuchar cambios en las preferencias del sistema
	window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
		if (localStorage.getItem('theme') === null) {
			if (e.matches) {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark');
			}
		}
	});
</script>
